# GENERATED, DO NOT EDIT!
# To change, edit `build-support/bin/generate_github_workflows.py` and run:
#   ./pants run build-support/bin/generate_github_workflows.py


env:
  PANTS_CONFIG_FILES: +['pants.ci.toml']
  RUST_BACKTRACE: all
jobs:
  build_wheels_linux:
    container: quay.io/pypa/manylinux2014_x86_64:latest
    env:
      PANTS_REMOTE_CACHE_READ: 'false'
      PANTS_REMOTE_CACHE_WRITE: 'false'
    name: Build wheels and fs_util (Linux)
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 10
    - if: github.event_name == 'push'
      name: Get commit message for branch builds
      run: 'echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        '
    - if: github.event_name == 'pull_request'
      name: Get commit message for PR builds
      run: 'echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$(git log --format=%B -n 1 HEAD^2)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        '
    - name: Install rustup
      run: 'curl --proto ''=https'' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s --
        -v -y --default-toolchain none
        echo "PATH=${PATH}:${HOME}/.cargo/bin" >> $GITHUB_ENV
        '
    - name: Expose Pythons
      run: echo "PATH=${PATH}:/opt/python/cp37-cp37m/bin:/opt/python/cp38-cp38/bin:/opt/python/cp39-cp39/bin"
        >> $GITHUB_ENV
    - if: github.event_name != 'pull_request'
      name: Setup toolchain auth
      run: 'echo TOOLCHAIN_AUTH_TOKEN="${{ secrets.TOOLCHAIN_AUTH_TOKEN }}" >> $GITHUB_ENV
        '
    - env:
        PANTS_CONFIG_FILES: +['pants.ci.toml']
      if: github.event_name == 'push' || !contains(env.COMMIT_MESSAGE, '[ci skip-build-wheels]')
      name: Build wheels and fs_util
      run: '[[ "${GITHUB_EVENT_NAME}" == "pull_request" ]] && export MODE=debug
        ./build-support/bin/release.sh -n
        USE_PY38=true ./build-support/bin/release.sh -n
        USE_PY39=true ./build-support/bin/release.sh -n
        ./build-support/bin/release.sh -f
        '
    - if: always()
      name: Upload pants.log
      uses: actions/upload-artifact@v2
      with:
        name: pants-log-wheels-linux
        path: .pants.d/pants.log
    - env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.event_name == 'push'
      name: Deploy to S3
      run: ./build-support/bin/deploy_to_s3.py
    timeout-minutes: 65
    
  test-aarch64:
    name: "Test ${{ matrix.pyver }} aarch64 build wheel"
    strategy:
      matrix:
        pyver: [cp37-cp37m]
        arch: [aarch64]
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
      PANTS_REMOTE_CACHE_READ: 'false'
      PANTS_REMOTE_CACHE_WRITE: 'false'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
   # - env:
    #    PANTS_CONFIG_FILES: +['pants.ci.toml']
    - name: Install dependenciess
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -v -y --default-toolchain none && \
            export PATH=$HOME/.cargo/bin:${PATH} && \
            rustup --version && \
            export PATH=$PATH:/opt/python/cp37-cp37m/bin:/opt/python/cp38-cp38/bin:/opt/python/cp39-cp39/bin
            export MODE=debug && \
            ulimit -u 10000 && \
            ./build-support/bin/release.sh -q && \
            USE_PY38=true ./build-support/bin/release.sh -q && \
            USE_PY39=true ./build-support/bin/release.sh -q && \
            ./build-support/bin/release.sh -f && \
            deactivate'
name: Pull Request CI
'on':
- push
- pull_request
